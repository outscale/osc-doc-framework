{{? typeof data.operation.callbacks === 'object'}}

### Callbacks

{{ data.operationStack.push(data.operation); }}

{{ for (const c of Object.keys(data.operation.callbacks)) { }}

#### {{=c}}

{{ const callback = data.operation.callbacks && data.operation.callbacks[c]; }}

{{ for (const e in callback) { }}

**{{=e}}**

{{ const exp = callback[e]; }}

{{ for (const m in exp) { }}

{{ data.operation = exp[m]; }}
{{ data.method.operation = data.operation; }}

{{= data.templates.operation(data) }}

{{ } /* of methods */ }}

{{ } /* of expressions */ }}

{{ } /* of callbacks */ }}

{{ data.operation = data.operationStack.pop(); }}
{{ data.method.operation = data.operation; }}

{{?}}
