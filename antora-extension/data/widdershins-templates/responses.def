{{ data.responses = data.custom.getResponses(data); }}
{{ data.responseHeaders = data.utils.getResponseHeaders(data); }}
{{ data.responseSchemas = false; }}
{{~ data.responses :response }}
{{ if (response.content) data.responseSchemas = true; }}
{{~}}

{{= data.tags.section }}

{{ data.responseSchemas = false; }}

{{~ data.responses :response }}
{{ if (response.content && !data.utils.isPrimitive(response.type)) data.responseSchemas = true; }}
{{~}}

{{? (data.responseSchemas && Object.keys(response.content || {}).length) || response.description }}

<h3 id="{{=data.operationUniqueSlug}}-responses">Response Elements</h3>

{{~ data.responses.slice(0, 1) :response}}
{{? Object.keys(response.content || {}).length }}
{{ response.safeType = response.schema; }}
{{ const responseKey = Object.keys(response.content)[0]; }}
{{ const responseSchema = response.content[responseKey].schema; }}
{{ let blocks = data.custom.schemaToArray(responseSchema,-1,{trim:true,join:true},data); }}
{{ blocks = data.custom.mergeXxxOfRowsIntoSingleBlock(blocks); }}

> Examples<a name="{{= data.custom.printOperationName(data.operationUniqueName) }}-res-example.json"></a>

{{= data.custom.getResponseExamples(data) }}

{{? blocks[0]?.rows[0]?.name === '*anonymous*' }}
**{{= response.status}} response**{{? response.safeType }} ({{= blocks[0].rows[0].safeType }}){{??}} ({{? response.schema}}{{= response.type }} {{?}}{{= response.type}}){{?}}{{? blocks[0].rows.length > 1 }}:{{?}}
{{ blocks[0].rows.shift(); }}
{{??}}
**{{= response.status}} response**{{? response.type}} ({{? response.schema}}{{= response.safeType}} {{?}}{{= response.type}}){{?}}:
{{?}}

{{ const responseHeaders = data.responseHeaders.filter(x => x.status === response.status); }}
{{? responseHeaders.length }}
|Response Header|Type|Description|
|---|---|---|
{{~ responseHeaders :h}}|{{=h.header}}|{{=h.type}}{{? h.format}} ({{=h.format}}){{?}}|{{= data.custom.printDescription(h, data.host) }}|
{{~}}
{{?}}

{{~ blocks :block}}

{{? block.rows.length }}

|Response Element|Type|Description|
|---|---|---|
{{~block.rows :p}}|{{= data.custom.printParameterName(p.displayName) }}{{= data.custom.getDeprecateState(p) }}|{{= data.custom.printType(p) }}|{{= data.custom.printDescription(p) }}|
{{~}}
{{?? block.rows === undefined }}
{{? !data.operation['x-webhook']}}Returns an empty object.{{??}}{{= response.description}}{{?}}
{{?}}

{{~}}

{{??}}
**{{= response.status}} response**:

{{? !data.operation['x-webhook']}}Returns an empty response.{{??}}{{= response.description}}{{?}}

{{?}}

{{ data.response = response; }}
{{#def.links}}

{{~}}

{{?}}

{{? !(data.responseSchemas && Object.keys(response.content || {}).length) }}

{{ const responseHeaders = data.responseHeaders.filter(x => x.status === response.status); }}
{{? responseHeaders.length }}
**{{= response.status}} response**:

|Response Header|Type|Description|
|---|---|---|
{{~ responseHeaders :h}}|{{=h.header}}|{{=h.type}}{{? h.format}} ({{=h.format}}){{?}}|{{= data.custom.printDescription(h, data.host) }}|
{{~}}
{{?}}

{{?}}

{{= data.custom.printErrorResponses(data.responses.slice(1), data.translations) }}

{{= data.tags.endSection }}
